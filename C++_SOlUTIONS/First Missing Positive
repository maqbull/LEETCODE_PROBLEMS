Given an unsorted integer array nums, return the smallest missing positive integer.

You must implement an algorithm that runs in O(n) time and uses constant extra space.

 

Example 1:

Input: nums = [1,2,0]
Output: 3
Example 2:

Input: nums = [3,4,-1,1]
Output: 2


class Solution {
public:
    int firstMissingPositive(vector<int>& A) {
      int n = A.size();
        for(int i = 0; i < n; ++ i)
           
            while(A[i] > 0 && A[i] <= n && A[A[i] - 1] != A[i]){
               cout<< A[A[i]-1];
                 cout<<i;
                swap(A[i], A[A[i] - 1]);
            }
        
        for(int i = 0; i < n; ++ i)
            if(A[i] != i + 1)
                return i + 1;
        
        return n + 1;
    }
    
};
