double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int n1 = nums1.size();
        int n2 = nums2.size();
        vector<int> nums3(n1+n2);
        
        int median;
        merge(nums1.begin(), nums1.end(), nums2.begin(), nums2.end(), nums3.begin());
        sort(nums3.begin(),nums3.end());
        int n = nums3.size();
        int ores;
        median = floor(n/2);
        float res;
        if (n == 0) return 0;
        if (n == 1) return nums3[0];
        if (n%2 == 0) {
            res = (float)( nums3[median] + nums3[median-1])/2;
            return res;
        }
        else {
            res = (float) nums3[median];
            return res;
        }

            
        
    }
